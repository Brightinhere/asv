// Generated by Dagger (https://dagger.dev).
package com.battlelancer.seriesguide.sync;

import com.battlelancer.seriesguide.movies.tools.MovieTools;
import com.uwetrottmann.tmdb2.services.ConfigurationService;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TmdbSyncTest_MembersInjector implements MembersInjector<TmdbSyncTest> {
  private final Provider<ConfigurationService> tmdbConfigServiceProvider;

  private final Provider<MovieTools> movieToolsProvider;

  public TmdbSyncTest_MembersInjector(Provider<ConfigurationService> tmdbConfigServiceProvider,
      Provider<MovieTools> movieToolsProvider) {
    this.tmdbConfigServiceProvider = tmdbConfigServiceProvider;
    this.movieToolsProvider = movieToolsProvider;
  }

  public static MembersInjector<TmdbSyncTest> create(
      Provider<ConfigurationService> tmdbConfigServiceProvider,
      Provider<MovieTools> movieToolsProvider) {
    return new TmdbSyncTest_MembersInjector(tmdbConfigServiceProvider, movieToolsProvider);
  }

  @Override
  public void injectMembers(TmdbSyncTest instance) {
    injectTmdbConfigService(instance, tmdbConfigServiceProvider.get());
    injectMovieTools(instance, movieToolsProvider.get());
  }

  @InjectedFieldSignature("com.battlelancer.seriesguide.sync.TmdbSyncTest.tmdbConfigService")
  public static void injectTmdbConfigService(TmdbSyncTest instance,
      ConfigurationService tmdbConfigService) {
    instance.tmdbConfigService = tmdbConfigService;
  }

  @InjectedFieldSignature("com.battlelancer.seriesguide.sync.TmdbSyncTest.movieTools")
  public static void injectMovieTools(TmdbSyncTest instance, MovieTools movieTools) {
    instance.movieTools = movieTools;
  }
}
