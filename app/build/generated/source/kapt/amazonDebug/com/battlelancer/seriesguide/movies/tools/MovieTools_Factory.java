// Generated by Dagger (https://dagger.dev).
package com.battlelancer.seriesguide.movies.tools;

import android.content.Context;
import com.uwetrottmann.tmdb2.services.MoviesService;
import com.uwetrottmann.trakt5.TraktV2;
import dagger.Lazy;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieTools_Factory implements Factory<MovieTools> {
  private final Provider<Context> contextProvider;

  private final Provider<MoviesService> tmdbMoviesProvider;

  private final Provider<TraktV2> traktProvider;

  public MovieTools_Factory(Provider<Context> contextProvider,
      Provider<MoviesService> tmdbMoviesProvider, Provider<TraktV2> traktProvider) {
    this.contextProvider = contextProvider;
    this.tmdbMoviesProvider = tmdbMoviesProvider;
    this.traktProvider = traktProvider;
  }

  @Override
  public MovieTools get() {
    return newInstance(contextProvider.get(), DoubleCheck.lazy(tmdbMoviesProvider), DoubleCheck.lazy(traktProvider));
  }

  public static MovieTools_Factory create(Provider<Context> contextProvider,
      Provider<MoviesService> tmdbMoviesProvider, Provider<TraktV2> traktProvider) {
    return new MovieTools_Factory(contextProvider, tmdbMoviesProvider, traktProvider);
  }

  public static MovieTools newInstance(Context context, Lazy<MoviesService> tmdbMovies,
      Lazy<TraktV2> trakt) {
    return new MovieTools(context, tmdbMovies, trakt);
  }
}
