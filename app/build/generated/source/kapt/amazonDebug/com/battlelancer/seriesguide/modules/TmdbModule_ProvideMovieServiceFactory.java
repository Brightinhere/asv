// Generated by Dagger (https://dagger.dev).
package com.battlelancer.seriesguide.modules;

import com.uwetrottmann.tmdb2.Tmdb;
import com.uwetrottmann.tmdb2.services.MoviesService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TmdbModule_ProvideMovieServiceFactory implements Factory<MoviesService> {
  private final TmdbModule module;

  private final Provider<Tmdb> tmdbProvider;

  public TmdbModule_ProvideMovieServiceFactory(TmdbModule module, Provider<Tmdb> tmdbProvider) {
    this.module = module;
    this.tmdbProvider = tmdbProvider;
  }

  @Override
  public MoviesService get() {
    return provideMovieService(module, tmdbProvider.get());
  }

  public static TmdbModule_ProvideMovieServiceFactory create(TmdbModule module,
      Provider<Tmdb> tmdbProvider) {
    return new TmdbModule_ProvideMovieServiceFactory(module, tmdbProvider);
  }

  public static MoviesService provideMovieService(TmdbModule instance, Tmdb tmdb) {
    return Preconditions.checkNotNullFromProvides(instance.provideMovieService(tmdb));
  }
}
