// Generated by Dagger (https://dagger.dev).
package com.battlelancer.seriesguide.modules;

import com.uwetrottmann.tmdb2.Tmdb;
import com.uwetrottmann.tmdb2.services.SearchService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.jetbrains.annotations.Nullable;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TmdbModule_ProvideSearchServiceFactory implements Factory<SearchService> {
  private final TmdbModule module;

  private final Provider<Tmdb> tmdbProvider;

  public TmdbModule_ProvideSearchServiceFactory(TmdbModule module, Provider<Tmdb> tmdbProvider) {
    this.module = module;
    this.tmdbProvider = tmdbProvider;
  }

  @Override
  @Nullable
  public SearchService get() {
    return provideSearchService(module, tmdbProvider.get());
  }

  public static TmdbModule_ProvideSearchServiceFactory create(TmdbModule module,
      Provider<Tmdb> tmdbProvider) {
    return new TmdbModule_ProvideSearchServiceFactory(module, tmdbProvider);
  }

  @Nullable
  public static SearchService provideSearchService(TmdbModule instance, Tmdb tmdb) {
    return instance.provideSearchService(tmdb);
  }
}
