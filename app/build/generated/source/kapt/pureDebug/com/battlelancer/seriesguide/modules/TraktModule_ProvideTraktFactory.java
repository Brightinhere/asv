// Generated by Dagger (https://dagger.dev).
package com.battlelancer.seriesguide.modules;

import android.content.Context;
import com.uwetrottmann.trakt5.TraktV2;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TraktModule_ProvideTraktFactory implements Factory<TraktV2> {
  private final TraktModule module;

  private final Provider<Context> contextProvider;

  private final Provider<OkHttpClient> okHttpClientProvider;

  public TraktModule_ProvideTraktFactory(TraktModule module, Provider<Context> contextProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public TraktV2 get() {
    return provideTrakt(module, contextProvider.get(), okHttpClientProvider.get());
  }

  public static TraktModule_ProvideTraktFactory create(TraktModule module,
      Provider<Context> contextProvider, Provider<OkHttpClient> okHttpClientProvider) {
    return new TraktModule_ProvideTraktFactory(module, contextProvider, okHttpClientProvider);
  }

  public static TraktV2 provideTrakt(TraktModule instance, Context context,
      OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(instance.provideTrakt(context, okHttpClient));
  }
}
