// Generated by Dagger (https://dagger.dev).
package com.battlelancer.seriesguide.sync;

import com.battlelancer.seriesguide.backend.HexagonTools;
import com.battlelancer.seriesguide.movies.tools.MovieTools;
import com.uwetrottmann.tmdb2.services.ConfigurationService;
import com.uwetrottmann.trakt5.services.Sync;
import dagger.Lazy;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SgSyncAdapter_MembersInjector implements MembersInjector<SgSyncAdapter> {
  private final Provider<HexagonTools> hexagonToolsProvider;

  private final Provider<Sync> traktSyncProvider;

  private final Provider<MovieTools> movieToolsProvider;

  private final Provider<ConfigurationService> tmdbConfigServiceProvider;

  public SgSyncAdapter_MembersInjector(Provider<HexagonTools> hexagonToolsProvider,
      Provider<Sync> traktSyncProvider, Provider<MovieTools> movieToolsProvider,
      Provider<ConfigurationService> tmdbConfigServiceProvider) {
    this.hexagonToolsProvider = hexagonToolsProvider;
    this.traktSyncProvider = traktSyncProvider;
    this.movieToolsProvider = movieToolsProvider;
    this.tmdbConfigServiceProvider = tmdbConfigServiceProvider;
  }

  public static MembersInjector<SgSyncAdapter> create(Provider<HexagonTools> hexagonToolsProvider,
      Provider<Sync> traktSyncProvider, Provider<MovieTools> movieToolsProvider,
      Provider<ConfigurationService> tmdbConfigServiceProvider) {
    return new SgSyncAdapter_MembersInjector(hexagonToolsProvider, traktSyncProvider, movieToolsProvider, tmdbConfigServiceProvider);
  }

  @Override
  public void injectMembers(SgSyncAdapter instance) {
    injectHexagonTools(instance, DoubleCheck.lazy(hexagonToolsProvider));
    injectTraktSync(instance, DoubleCheck.lazy(traktSyncProvider));
    injectMovieTools(instance, DoubleCheck.lazy(movieToolsProvider));
    injectTmdbConfigService(instance, DoubleCheck.lazy(tmdbConfigServiceProvider));
  }

  @InjectedFieldSignature("com.battlelancer.seriesguide.sync.SgSyncAdapter.hexagonTools")
  public static void injectHexagonTools(SgSyncAdapter instance, Lazy<HexagonTools> hexagonTools) {
    instance.hexagonTools = hexagonTools;
  }

  @InjectedFieldSignature("com.battlelancer.seriesguide.sync.SgSyncAdapter.traktSync")
  public static void injectTraktSync(SgSyncAdapter instance, Lazy<Sync> traktSync) {
    instance.traktSync = traktSync;
  }

  @InjectedFieldSignature("com.battlelancer.seriesguide.sync.SgSyncAdapter.movieTools")
  public static void injectMovieTools(SgSyncAdapter instance, Lazy<MovieTools> movieTools) {
    instance.movieTools = movieTools;
  }

  @InjectedFieldSignature("com.battlelancer.seriesguide.sync.SgSyncAdapter.tmdbConfigService")
  public static void injectTmdbConfigService(SgSyncAdapter instance,
      Lazy<ConfigurationService> tmdbConfigService) {
    instance.tmdbConfigService = tmdbConfigService;
  }
}
