// Generated by Dagger (https://dagger.dev).
package com.battlelancer.seriesguide.modules;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Cache;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HttpClientModule_ProvideOkHttpCacheFactory implements Factory<Cache> {
  private final HttpClientModule module;

  private final Provider<Context> contextProvider;

  public HttpClientModule_ProvideOkHttpCacheFactory(HttpClientModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public Cache get() {
    return provideOkHttpCache(module, contextProvider.get());
  }

  public static HttpClientModule_ProvideOkHttpCacheFactory create(HttpClientModule module,
      Provider<Context> contextProvider) {
    return new HttpClientModule_ProvideOkHttpCacheFactory(module, contextProvider);
  }

  public static Cache provideOkHttpCache(HttpClientModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideOkHttpCache(context));
  }
}
