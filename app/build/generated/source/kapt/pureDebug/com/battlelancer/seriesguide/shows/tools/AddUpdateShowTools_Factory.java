// Generated by Dagger (https://dagger.dev).
package com.battlelancer.seriesguide.shows.tools;

import android.content.Context;
import com.battlelancer.seriesguide.backend.HexagonTools;
import com.battlelancer.seriesguide.sync.HexagonShowSync;
import dagger.Lazy;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddUpdateShowTools_Factory implements Factory<AddUpdateShowTools> {
  private final Provider<Context> contextProvider;

  private final Provider<GetShowTools> getShowToolsProvider;

  private final Provider<HexagonShowSync> hexagonShowSyncProvider;

  private final Provider<HexagonTools> hexagonToolsProvider;

  private final Provider<ShowTools2> showToolsProvider;

  public AddUpdateShowTools_Factory(Provider<Context> contextProvider,
      Provider<GetShowTools> getShowToolsProvider,
      Provider<HexagonShowSync> hexagonShowSyncProvider,
      Provider<HexagonTools> hexagonToolsProvider, Provider<ShowTools2> showToolsProvider) {
    this.contextProvider = contextProvider;
    this.getShowToolsProvider = getShowToolsProvider;
    this.hexagonShowSyncProvider = hexagonShowSyncProvider;
    this.hexagonToolsProvider = hexagonToolsProvider;
    this.showToolsProvider = showToolsProvider;
  }

  @Override
  public AddUpdateShowTools get() {
    return newInstance(contextProvider.get(), getShowToolsProvider.get(), DoubleCheck.lazy(hexagonShowSyncProvider), DoubleCheck.lazy(hexagonToolsProvider), DoubleCheck.lazy(showToolsProvider));
  }

  public static AddUpdateShowTools_Factory create(Provider<Context> contextProvider,
      Provider<GetShowTools> getShowToolsProvider,
      Provider<HexagonShowSync> hexagonShowSyncProvider,
      Provider<HexagonTools> hexagonToolsProvider, Provider<ShowTools2> showToolsProvider) {
    return new AddUpdateShowTools_Factory(contextProvider, getShowToolsProvider, hexagonShowSyncProvider, hexagonToolsProvider, showToolsProvider);
  }

  public static AddUpdateShowTools newInstance(Context context, GetShowTools getShowTools,
      Lazy<HexagonShowSync> hexagonShowSync, Lazy<HexagonTools> hexagonTools,
      Lazy<ShowTools2> showTools) {
    return new AddUpdateShowTools(context, getShowTools, hexagonShowSync, hexagonTools, showTools);
  }
}
