// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.helper.widget.Flow;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewFirstRunBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Button buttonAddShow;

  @NonNull
  public final ImageButton buttonDismiss;

  @NonNull
  public final Button buttonRestoreAutoBackup;

  @NonNull
  public final Button buttonRestoreBackup;

  @NonNull
  public final Button buttonSignIn;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final CheckBox checkboxDataSaver;

  @NonNull
  public final CheckBox checkboxErrorReports;

  @NonNull
  public final CheckBox checkboxNoSpoilers;

  @NonNull
  public final ConstraintLayout containerCard;

  @NonNull
  public final FrameLayout containerDataSaver;

  @NonNull
  public final FrameLayout containerErrorReports;

  @NonNull
  public final FrameLayout containerNoSpoilers;

  @NonNull
  public final DividerHorizontalBinding dividerBottom;

  @NonNull
  public final Flow flowGetStartedButtons;

  @NonNull
  public final Group groupAutoBackupDetected;

  @NonNull
  public final TextView textViewAutoBackupDetected;

  @NonNull
  public final TextView textViewPolicyLink;

  @NonNull
  public final TextView textViewTitle;

  private ViewFirstRunBinding(@NonNull MaterialCardView rootView, @NonNull Button buttonAddShow,
      @NonNull ImageButton buttonDismiss, @NonNull Button buttonRestoreAutoBackup,
      @NonNull Button buttonRestoreBackup, @NonNull Button buttonSignIn,
      @NonNull MaterialCardView cardView, @NonNull CheckBox checkboxDataSaver,
      @NonNull CheckBox checkboxErrorReports, @NonNull CheckBox checkboxNoSpoilers,
      @NonNull ConstraintLayout containerCard, @NonNull FrameLayout containerDataSaver,
      @NonNull FrameLayout containerErrorReports, @NonNull FrameLayout containerNoSpoilers,
      @NonNull DividerHorizontalBinding dividerBottom, @NonNull Flow flowGetStartedButtons,
      @NonNull Group groupAutoBackupDetected, @NonNull TextView textViewAutoBackupDetected,
      @NonNull TextView textViewPolicyLink, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.buttonAddShow = buttonAddShow;
    this.buttonDismiss = buttonDismiss;
    this.buttonRestoreAutoBackup = buttonRestoreAutoBackup;
    this.buttonRestoreBackup = buttonRestoreBackup;
    this.buttonSignIn = buttonSignIn;
    this.cardView = cardView;
    this.checkboxDataSaver = checkboxDataSaver;
    this.checkboxErrorReports = checkboxErrorReports;
    this.checkboxNoSpoilers = checkboxNoSpoilers;
    this.containerCard = containerCard;
    this.containerDataSaver = containerDataSaver;
    this.containerErrorReports = containerErrorReports;
    this.containerNoSpoilers = containerNoSpoilers;
    this.dividerBottom = dividerBottom;
    this.flowGetStartedButtons = flowGetStartedButtons;
    this.groupAutoBackupDetected = groupAutoBackupDetected;
    this.textViewAutoBackupDetected = textViewAutoBackupDetected;
    this.textViewPolicyLink = textViewPolicyLink;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewFirstRunBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewFirstRunBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_first_run, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewFirstRunBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddShow;
      Button buttonAddShow = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddShow == null) {
        break missingId;
      }

      id = R.id.buttonDismiss;
      ImageButton buttonDismiss = ViewBindings.findChildViewById(rootView, id);
      if (buttonDismiss == null) {
        break missingId;
      }

      id = R.id.buttonRestoreAutoBackup;
      Button buttonRestoreAutoBackup = ViewBindings.findChildViewById(rootView, id);
      if (buttonRestoreAutoBackup == null) {
        break missingId;
      }

      id = R.id.buttonRestoreBackup;
      Button buttonRestoreBackup = ViewBindings.findChildViewById(rootView, id);
      if (buttonRestoreBackup == null) {
        break missingId;
      }

      id = R.id.buttonSignIn;
      Button buttonSignIn = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignIn == null) {
        break missingId;
      }

      MaterialCardView cardView = (MaterialCardView) rootView;

      id = R.id.checkboxDataSaver;
      CheckBox checkboxDataSaver = ViewBindings.findChildViewById(rootView, id);
      if (checkboxDataSaver == null) {
        break missingId;
      }

      id = R.id.checkboxErrorReports;
      CheckBox checkboxErrorReports = ViewBindings.findChildViewById(rootView, id);
      if (checkboxErrorReports == null) {
        break missingId;
      }

      id = R.id.checkboxNoSpoilers;
      CheckBox checkboxNoSpoilers = ViewBindings.findChildViewById(rootView, id);
      if (checkboxNoSpoilers == null) {
        break missingId;
      }

      id = R.id.containerCard;
      ConstraintLayout containerCard = ViewBindings.findChildViewById(rootView, id);
      if (containerCard == null) {
        break missingId;
      }

      id = R.id.containerDataSaver;
      FrameLayout containerDataSaver = ViewBindings.findChildViewById(rootView, id);
      if (containerDataSaver == null) {
        break missingId;
      }

      id = R.id.containerErrorReports;
      FrameLayout containerErrorReports = ViewBindings.findChildViewById(rootView, id);
      if (containerErrorReports == null) {
        break missingId;
      }

      id = R.id.containerNoSpoilers;
      FrameLayout containerNoSpoilers = ViewBindings.findChildViewById(rootView, id);
      if (containerNoSpoilers == null) {
        break missingId;
      }

      id = R.id.dividerBottom;
      View dividerBottom = ViewBindings.findChildViewById(rootView, id);
      if (dividerBottom == null) {
        break missingId;
      }
      DividerHorizontalBinding binding_dividerBottom = DividerHorizontalBinding.bind(dividerBottom);

      id = R.id.flowGetStartedButtons;
      Flow flowGetStartedButtons = ViewBindings.findChildViewById(rootView, id);
      if (flowGetStartedButtons == null) {
        break missingId;
      }

      id = R.id.groupAutoBackupDetected;
      Group groupAutoBackupDetected = ViewBindings.findChildViewById(rootView, id);
      if (groupAutoBackupDetected == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupDetected;
      TextView textViewAutoBackupDetected = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupDetected == null) {
        break missingId;
      }

      id = R.id.textViewPolicyLink;
      TextView textViewPolicyLink = ViewBindings.findChildViewById(rootView, id);
      if (textViewPolicyLink == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new ViewFirstRunBinding((MaterialCardView) rootView, buttonAddShow, buttonDismiss,
          buttonRestoreAutoBackup, buttonRestoreBackup, buttonSignIn, cardView, checkboxDataSaver,
          checkboxErrorReports, checkboxNoSpoilers, containerCard, containerDataSaver,
          containerErrorReports, containerNoSpoilers, binding_dividerBottom, flowGetStartedButtons,
          groupAutoBackupDetected, textViewAutoBackupDetected, textViewPolicyLink, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
