// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogCheckinBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonCheckIn;

  @NonNull
  public final Button buttonCheckInClear;

  @NonNull
  public final Button buttonCheckInPasteTitle;

  @NonNull
  public final ProgressBar progressBarCheckIn;

  @NonNull
  public final TextInputLayout textInputLayoutCheckIn;

  private DialogCheckinBinding(@NonNull LinearLayout rootView, @NonNull Button buttonCheckIn,
      @NonNull Button buttonCheckInClear, @NonNull Button buttonCheckInPasteTitle,
      @NonNull ProgressBar progressBarCheckIn, @NonNull TextInputLayout textInputLayoutCheckIn) {
    this.rootView = rootView;
    this.buttonCheckIn = buttonCheckIn;
    this.buttonCheckInClear = buttonCheckInClear;
    this.buttonCheckInPasteTitle = buttonCheckInPasteTitle;
    this.progressBarCheckIn = progressBarCheckIn;
    this.textInputLayoutCheckIn = textInputLayoutCheckIn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogCheckinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogCheckinBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_checkin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogCheckinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCheckIn;
      Button buttonCheckIn = ViewBindings.findChildViewById(rootView, id);
      if (buttonCheckIn == null) {
        break missingId;
      }

      id = R.id.buttonCheckInClear;
      Button buttonCheckInClear = ViewBindings.findChildViewById(rootView, id);
      if (buttonCheckInClear == null) {
        break missingId;
      }

      id = R.id.buttonCheckInPasteTitle;
      Button buttonCheckInPasteTitle = ViewBindings.findChildViewById(rootView, id);
      if (buttonCheckInPasteTitle == null) {
        break missingId;
      }

      id = R.id.progressBarCheckIn;
      ProgressBar progressBarCheckIn = ViewBindings.findChildViewById(rootView, id);
      if (progressBarCheckIn == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCheckIn;
      TextInputLayout textInputLayoutCheckIn = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutCheckIn == null) {
        break missingId;
      }

      return new DialogCheckinBinding((LinearLayout) rootView, buttonCheckIn, buttonCheckInClear,
          buttonCheckInPasteTitle, progressBarCheckIn, textInputLayoutCheckIn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
