// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.battlelancer.seriesguide.R;
import com.uwetrottmann.seriesguide.widgets.SlidingTabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEpisodesBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout containerEpisodesPager;

  @NonNull
  public final CoordinatorLayout coordinatorLayoutEpisodes;

  @NonNull
  public final FrameLayout fragmentEpisodes;

  @NonNull
  public final ImageView imageViewEpisodesBackground;

  @NonNull
  public final ViewPager2 pagerEpisodes;

  @NonNull
  public final SlidingTabLayout tabsEpisodes;

  private ActivityEpisodesBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout containerEpisodesPager,
      @NonNull CoordinatorLayout coordinatorLayoutEpisodes, @NonNull FrameLayout fragmentEpisodes,
      @NonNull ImageView imageViewEpisodesBackground, @NonNull ViewPager2 pagerEpisodes,
      @NonNull SlidingTabLayout tabsEpisodes) {
    this.rootView = rootView;
    this.containerEpisodesPager = containerEpisodesPager;
    this.coordinatorLayoutEpisodes = coordinatorLayoutEpisodes;
    this.fragmentEpisodes = fragmentEpisodes;
    this.imageViewEpisodesBackground = imageViewEpisodesBackground;
    this.pagerEpisodes = pagerEpisodes;
    this.tabsEpisodes = tabsEpisodes;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEpisodesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEpisodesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_episodes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEpisodesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.containerEpisodesPager;
      LinearLayout containerEpisodesPager = ViewBindings.findChildViewById(rootView, id);
      if (containerEpisodesPager == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayoutEpisodes = (CoordinatorLayout) rootView;

      id = R.id.fragment_episodes;
      FrameLayout fragmentEpisodes = ViewBindings.findChildViewById(rootView, id);
      if (fragmentEpisodes == null) {
        break missingId;
      }

      id = R.id.imageViewEpisodesBackground;
      ImageView imageViewEpisodesBackground = ViewBindings.findChildViewById(rootView, id);
      if (imageViewEpisodesBackground == null) {
        break missingId;
      }

      id = R.id.pagerEpisodes;
      ViewPager2 pagerEpisodes = ViewBindings.findChildViewById(rootView, id);
      if (pagerEpisodes == null) {
        break missingId;
      }

      id = R.id.tabsEpisodes;
      SlidingTabLayout tabsEpisodes = ViewBindings.findChildViewById(rootView, id);
      if (tabsEpisodes == null) {
        break missingId;
      }

      return new ActivityEpisodesBinding((CoordinatorLayout) rootView, containerEpisodesPager,
          coordinatorLayoutEpisodes, fragmentEpisodes, imageViewEpisodesBackground, pagerEpisodes,
          tabsEpisodes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
