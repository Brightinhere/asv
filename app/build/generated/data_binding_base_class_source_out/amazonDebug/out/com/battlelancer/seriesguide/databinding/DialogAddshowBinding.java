// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddshowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonAddDisplaySimilar;

  @NonNull
  public final Button buttonAddLanguage;

  @NonNull
  public final Button buttonAddStreamingSearch;

  @NonNull
  public final ImageButton buttonAddStreamingSearchInfo;

  @NonNull
  public final Button buttonNegative;

  @NonNull
  public final Button buttonPositive;

  @NonNull
  public final ConstraintLayout containerAddStreamingSearch;

  @NonNull
  public final RelativeLayout containerShowInfo;

  @NonNull
  public final ImageView imageViewAddPoster;

  @NonNull
  public final ProgressBar progressBarAdd;

  @NonNull
  public final TextView textViewAddDescription;

  @NonNull
  public final TextView textViewAddGenres;

  @NonNull
  public final TextView textViewAddGenresLabel;

  @NonNull
  public final TextView textViewAddRatingLabel;

  @NonNull
  public final TextView textViewAddRatingRange;

  @NonNull
  public final TextView textViewAddRatingValue;

  @NonNull
  public final TextView textViewAddReleased;

  @NonNull
  public final TextView textViewAddShowMeta;

  @NonNull
  public final TextView textViewAddStreamingSearch;

  @NonNull
  public final TextView textViewAddTitle;

  private DialogAddshowBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonAddDisplaySimilar, @NonNull Button buttonAddLanguage,
      @NonNull Button buttonAddStreamingSearch, @NonNull ImageButton buttonAddStreamingSearchInfo,
      @NonNull Button buttonNegative, @NonNull Button buttonPositive,
      @NonNull ConstraintLayout containerAddStreamingSearch,
      @NonNull RelativeLayout containerShowInfo, @NonNull ImageView imageViewAddPoster,
      @NonNull ProgressBar progressBarAdd, @NonNull TextView textViewAddDescription,
      @NonNull TextView textViewAddGenres, @NonNull TextView textViewAddGenresLabel,
      @NonNull TextView textViewAddRatingLabel, @NonNull TextView textViewAddRatingRange,
      @NonNull TextView textViewAddRatingValue, @NonNull TextView textViewAddReleased,
      @NonNull TextView textViewAddShowMeta, @NonNull TextView textViewAddStreamingSearch,
      @NonNull TextView textViewAddTitle) {
    this.rootView = rootView;
    this.buttonAddDisplaySimilar = buttonAddDisplaySimilar;
    this.buttonAddLanguage = buttonAddLanguage;
    this.buttonAddStreamingSearch = buttonAddStreamingSearch;
    this.buttonAddStreamingSearchInfo = buttonAddStreamingSearchInfo;
    this.buttonNegative = buttonNegative;
    this.buttonPositive = buttonPositive;
    this.containerAddStreamingSearch = containerAddStreamingSearch;
    this.containerShowInfo = containerShowInfo;
    this.imageViewAddPoster = imageViewAddPoster;
    this.progressBarAdd = progressBarAdd;
    this.textViewAddDescription = textViewAddDescription;
    this.textViewAddGenres = textViewAddGenres;
    this.textViewAddGenresLabel = textViewAddGenresLabel;
    this.textViewAddRatingLabel = textViewAddRatingLabel;
    this.textViewAddRatingRange = textViewAddRatingRange;
    this.textViewAddRatingValue = textViewAddRatingValue;
    this.textViewAddReleased = textViewAddReleased;
    this.textViewAddShowMeta = textViewAddShowMeta;
    this.textViewAddStreamingSearch = textViewAddStreamingSearch;
    this.textViewAddTitle = textViewAddTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddshowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddshowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_addshow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddshowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddDisplaySimilar;
      Button buttonAddDisplaySimilar = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddDisplaySimilar == null) {
        break missingId;
      }

      id = R.id.buttonAddLanguage;
      Button buttonAddLanguage = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddLanguage == null) {
        break missingId;
      }

      id = R.id.buttonAddStreamingSearch;
      Button buttonAddStreamingSearch = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddStreamingSearch == null) {
        break missingId;
      }

      id = R.id.buttonAddStreamingSearchInfo;
      ImageButton buttonAddStreamingSearchInfo = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddStreamingSearchInfo == null) {
        break missingId;
      }

      id = R.id.buttonNegative;
      Button buttonNegative = ViewBindings.findChildViewById(rootView, id);
      if (buttonNegative == null) {
        break missingId;
      }

      id = R.id.buttonPositive;
      Button buttonPositive = ViewBindings.findChildViewById(rootView, id);
      if (buttonPositive == null) {
        break missingId;
      }

      id = R.id.containerAddStreamingSearch;
      ConstraintLayout containerAddStreamingSearch = ViewBindings.findChildViewById(rootView, id);
      if (containerAddStreamingSearch == null) {
        break missingId;
      }

      id = R.id.containerShowInfo;
      RelativeLayout containerShowInfo = ViewBindings.findChildViewById(rootView, id);
      if (containerShowInfo == null) {
        break missingId;
      }

      id = R.id.imageViewAddPoster;
      ImageView imageViewAddPoster = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAddPoster == null) {
        break missingId;
      }

      id = R.id.progressBarAdd;
      ProgressBar progressBarAdd = ViewBindings.findChildViewById(rootView, id);
      if (progressBarAdd == null) {
        break missingId;
      }

      id = R.id.textViewAddDescription;
      TextView textViewAddDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddDescription == null) {
        break missingId;
      }

      id = R.id.textViewAddGenres;
      TextView textViewAddGenres = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddGenres == null) {
        break missingId;
      }

      id = R.id.textViewAddGenresLabel;
      TextView textViewAddGenresLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddGenresLabel == null) {
        break missingId;
      }

      id = R.id.textViewAddRatingLabel;
      TextView textViewAddRatingLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddRatingLabel == null) {
        break missingId;
      }

      id = R.id.textViewAddRatingRange;
      TextView textViewAddRatingRange = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddRatingRange == null) {
        break missingId;
      }

      id = R.id.textViewAddRatingValue;
      TextView textViewAddRatingValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddRatingValue == null) {
        break missingId;
      }

      id = R.id.textViewAddReleased;
      TextView textViewAddReleased = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddReleased == null) {
        break missingId;
      }

      id = R.id.textViewAddShowMeta;
      TextView textViewAddShowMeta = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddShowMeta == null) {
        break missingId;
      }

      id = R.id.textViewAddStreamingSearch;
      TextView textViewAddStreamingSearch = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddStreamingSearch == null) {
        break missingId;
      }

      id = R.id.textViewAddTitle;
      TextView textViewAddTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddTitle == null) {
        break missingId;
      }

      return new DialogAddshowBinding((LinearLayout) rootView, buttonAddDisplaySimilar,
          buttonAddLanguage, buttonAddStreamingSearch, buttonAddStreamingSearchInfo, buttonNegative,
          buttonPositive, containerAddStreamingSearch, containerShowInfo, imageViewAddPoster,
          progressBarAdd, textViewAddDescription, textViewAddGenres, textViewAddGenresLabel,
          textViewAddRatingLabel, textViewAddRatingRange, textViewAddRatingValue,
          textViewAddReleased, textViewAddShowMeta, textViewAddStreamingSearch, textViewAddTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
