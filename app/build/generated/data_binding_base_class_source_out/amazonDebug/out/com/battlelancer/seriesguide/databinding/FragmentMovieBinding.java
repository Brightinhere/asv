// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMovieBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button buttonMovieComments;

  @NonNull
  public final Button buttonMovieLanguage;

  @NonNull
  public final Button buttonMovieTrailer;

  @NonNull
  public final LinearLayout containerMovieActions;

  @NonNull
  public final ButtonsMovieBinding containerMovieButtons;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-w590dp/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   *   <li>layout-w1024dp/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout containerMovieDetails;

  @NonNull
  public final RelativeLayout containerMovieHeader;

  @NonNull
  public final RatingsMoviesBinding containerRatings;

  @NonNull
  public final NestedScrollView contentContainerMovie;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-w1024dp/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   *   <li>layout-w590dp/</li>
   * </ul>
   */
  @Nullable
  public final NestedScrollView contentContainerMovieRight;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-w1024dp/</li>
   *   <li>layout-w590dp/</li>
   * </ul>
   */
  @Nullable
  public final View dividerMovie0;

  @NonNull
  public final View dividerMovie1;

  @NonNull
  public final View dividerMovie2;

  @NonNull
  public final View dividerMovie3;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   *   <li>layout-w590dp/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-w1024dp/</li>
   * </ul>
   */
  @Nullable
  public final View dividerMovie4;

  @NonNull
  public final MaterialCardView frameLayoutMoviePoster;

  @NonNull
  public final ImageView imageViewMoviePoster;

  @NonNull
  public final TextView labelMovieLastUpdated;

  @NonNull
  public final CastAndCrewBinding moviePeople;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final FrameLayout rootLayoutMovie;

  @NonNull
  public final TextView textMovieLastUpdated;

  @NonNull
  public final TextView textViewMovieDate;

  @NonNull
  public final TextView textViewMovieDescription;

  @NonNull
  public final TextView textViewMovieGenres;

  @NonNull
  public final TextView textViewMovieGenresLabel;

  @NonNull
  public final TextView textViewMovieTitle;

  private FragmentMovieBinding(@NonNull FrameLayout rootView, @NonNull Button buttonMovieComments,
      @NonNull Button buttonMovieLanguage, @NonNull Button buttonMovieTrailer,
      @NonNull LinearLayout containerMovieActions,
      @NonNull ButtonsMovieBinding containerMovieButtons,
      @Nullable LinearLayout containerMovieDetails, @NonNull RelativeLayout containerMovieHeader,
      @NonNull RatingsMoviesBinding containerRatings,
      @NonNull NestedScrollView contentContainerMovie,
      @Nullable NestedScrollView contentContainerMovieRight, @Nullable View dividerMovie0,
      @NonNull View dividerMovie1, @NonNull View dividerMovie2, @NonNull View dividerMovie3,
      @Nullable View dividerMovie4, @NonNull MaterialCardView frameLayoutMoviePoster,
      @NonNull ImageView imageViewMoviePoster, @NonNull TextView labelMovieLastUpdated,
      @NonNull CastAndCrewBinding moviePeople, @NonNull ProgressBar progressBar,
      @NonNull FrameLayout rootLayoutMovie, @NonNull TextView textMovieLastUpdated,
      @NonNull TextView textViewMovieDate, @NonNull TextView textViewMovieDescription,
      @NonNull TextView textViewMovieGenres, @NonNull TextView textViewMovieGenresLabel,
      @NonNull TextView textViewMovieTitle) {
    this.rootView = rootView;
    this.buttonMovieComments = buttonMovieComments;
    this.buttonMovieLanguage = buttonMovieLanguage;
    this.buttonMovieTrailer = buttonMovieTrailer;
    this.containerMovieActions = containerMovieActions;
    this.containerMovieButtons = containerMovieButtons;
    this.containerMovieDetails = containerMovieDetails;
    this.containerMovieHeader = containerMovieHeader;
    this.containerRatings = containerRatings;
    this.contentContainerMovie = contentContainerMovie;
    this.contentContainerMovieRight = contentContainerMovieRight;
    this.dividerMovie0 = dividerMovie0;
    this.dividerMovie1 = dividerMovie1;
    this.dividerMovie2 = dividerMovie2;
    this.dividerMovie3 = dividerMovie3;
    this.dividerMovie4 = dividerMovie4;
    this.frameLayoutMoviePoster = frameLayoutMoviePoster;
    this.imageViewMoviePoster = imageViewMoviePoster;
    this.labelMovieLastUpdated = labelMovieLastUpdated;
    this.moviePeople = moviePeople;
    this.progressBar = progressBar;
    this.rootLayoutMovie = rootLayoutMovie;
    this.textMovieLastUpdated = textMovieLastUpdated;
    this.textViewMovieDate = textViewMovieDate;
    this.textViewMovieDescription = textViewMovieDescription;
    this.textViewMovieGenres = textViewMovieGenres;
    this.textViewMovieGenresLabel = textViewMovieGenresLabel;
    this.textViewMovieTitle = textViewMovieTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMovieBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMovieBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_movie, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMovieBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonMovieComments;
      Button buttonMovieComments = ViewBindings.findChildViewById(rootView, id);
      if (buttonMovieComments == null) {
        break missingId;
      }

      id = R.id.buttonMovieLanguage;
      Button buttonMovieLanguage = ViewBindings.findChildViewById(rootView, id);
      if (buttonMovieLanguage == null) {
        break missingId;
      }

      id = R.id.buttonMovieTrailer;
      Button buttonMovieTrailer = ViewBindings.findChildViewById(rootView, id);
      if (buttonMovieTrailer == null) {
        break missingId;
      }

      id = R.id.containerMovieActions;
      LinearLayout containerMovieActions = ViewBindings.findChildViewById(rootView, id);
      if (containerMovieActions == null) {
        break missingId;
      }

      id = R.id.containerMovieButtons;
      View containerMovieButtons = ViewBindings.findChildViewById(rootView, id);
      if (containerMovieButtons == null) {
        break missingId;
      }
      ButtonsMovieBinding binding_containerMovieButtons = ButtonsMovieBinding.bind(containerMovieButtons);

      id = R.id.containerMovieDetails;
      LinearLayout containerMovieDetails = ViewBindings.findChildViewById(rootView, id);

      id = R.id.containerMovieHeader;
      RelativeLayout containerMovieHeader = ViewBindings.findChildViewById(rootView, id);
      if (containerMovieHeader == null) {
        break missingId;
      }

      id = R.id.containerRatings;
      View containerRatings = ViewBindings.findChildViewById(rootView, id);
      if (containerRatings == null) {
        break missingId;
      }
      RatingsMoviesBinding binding_containerRatings = RatingsMoviesBinding.bind(containerRatings);

      id = R.id.contentContainerMovie;
      NestedScrollView contentContainerMovie = ViewBindings.findChildViewById(rootView, id);
      if (contentContainerMovie == null) {
        break missingId;
      }

      id = R.id.contentContainerMovieRight;
      NestedScrollView contentContainerMovieRight = ViewBindings.findChildViewById(rootView, id);

      id = R.id.dividerMovie0;
      View dividerMovie0 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.dividerMovie1;
      View dividerMovie1 = ViewBindings.findChildViewById(rootView, id);
      if (dividerMovie1 == null) {
        break missingId;
      }

      id = R.id.dividerMovie2;
      View dividerMovie2 = ViewBindings.findChildViewById(rootView, id);
      if (dividerMovie2 == null) {
        break missingId;
      }

      id = R.id.dividerMovie3;
      View dividerMovie3 = ViewBindings.findChildViewById(rootView, id);
      if (dividerMovie3 == null) {
        break missingId;
      }

      id = R.id.dividerMovie4;
      View dividerMovie4 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.frameLayoutMoviePoster;
      MaterialCardView frameLayoutMoviePoster = ViewBindings.findChildViewById(rootView, id);
      if (frameLayoutMoviePoster == null) {
        break missingId;
      }

      id = R.id.imageViewMoviePoster;
      ImageView imageViewMoviePoster = ViewBindings.findChildViewById(rootView, id);
      if (imageViewMoviePoster == null) {
        break missingId;
      }

      id = R.id.labelMovieLastUpdated;
      TextView labelMovieLastUpdated = ViewBindings.findChildViewById(rootView, id);
      if (labelMovieLastUpdated == null) {
        break missingId;
      }

      id = R.id.moviePeople;
      View moviePeople = ViewBindings.findChildViewById(rootView, id);
      if (moviePeople == null) {
        break missingId;
      }
      CastAndCrewBinding binding_moviePeople = CastAndCrewBinding.bind(moviePeople);

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      FrameLayout rootLayoutMovie = (FrameLayout) rootView;

      id = R.id.textMovieLastUpdated;
      TextView textMovieLastUpdated = ViewBindings.findChildViewById(rootView, id);
      if (textMovieLastUpdated == null) {
        break missingId;
      }

      id = R.id.textViewMovieDate;
      TextView textViewMovieDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewMovieDate == null) {
        break missingId;
      }

      id = R.id.textViewMovieDescription;
      TextView textViewMovieDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewMovieDescription == null) {
        break missingId;
      }

      id = R.id.textViewMovieGenres;
      TextView textViewMovieGenres = ViewBindings.findChildViewById(rootView, id);
      if (textViewMovieGenres == null) {
        break missingId;
      }

      id = R.id.textViewMovieGenresLabel;
      TextView textViewMovieGenresLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewMovieGenresLabel == null) {
        break missingId;
      }

      id = R.id.textViewMovieTitle;
      TextView textViewMovieTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewMovieTitle == null) {
        break missingId;
      }

      return new FragmentMovieBinding((FrameLayout) rootView, buttonMovieComments,
          buttonMovieLanguage, buttonMovieTrailer, containerMovieActions,
          binding_containerMovieButtons, containerMovieDetails, containerMovieHeader,
          binding_containerRatings, contentContainerMovie, contentContainerMovieRight,
          dividerMovie0, dividerMovie1, dividerMovie2, dividerMovie3, dividerMovie4,
          frameLayoutMoviePoster, imageViewMoviePoster, labelMovieLastUpdated, binding_moviePeople,
          progressBar, rootLayoutMovie, textMovieLastUpdated, textViewMovieDate,
          textViewMovieDescription, textViewMovieGenres, textViewMovieGenresLabel,
          textViewMovieTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
