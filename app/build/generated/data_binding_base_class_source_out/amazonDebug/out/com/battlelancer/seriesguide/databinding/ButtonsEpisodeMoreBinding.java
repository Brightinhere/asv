// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ButtonsEpisodeMoreBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonEpisodeCalendar;

  @NonNull
  public final Button buttonEpisodeComments;

  @NonNull
  public final Button buttonEpisodeImdb;

  @NonNull
  public final Button buttonEpisodeShare;

  @NonNull
  public final Button buttonEpisodeTmdb;

  @NonNull
  public final Button buttonEpisodeTrakt;

  private ButtonsEpisodeMoreBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonEpisodeCalendar, @NonNull Button buttonEpisodeComments,
      @NonNull Button buttonEpisodeImdb, @NonNull Button buttonEpisodeShare,
      @NonNull Button buttonEpisodeTmdb, @NonNull Button buttonEpisodeTrakt) {
    this.rootView = rootView;
    this.buttonEpisodeCalendar = buttonEpisodeCalendar;
    this.buttonEpisodeComments = buttonEpisodeComments;
    this.buttonEpisodeImdb = buttonEpisodeImdb;
    this.buttonEpisodeShare = buttonEpisodeShare;
    this.buttonEpisodeTmdb = buttonEpisodeTmdb;
    this.buttonEpisodeTrakt = buttonEpisodeTrakt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ButtonsEpisodeMoreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ButtonsEpisodeMoreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.buttons_episode_more, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ButtonsEpisodeMoreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonEpisodeCalendar;
      Button buttonEpisodeCalendar = ViewBindings.findChildViewById(rootView, id);
      if (buttonEpisodeCalendar == null) {
        break missingId;
      }

      id = R.id.buttonEpisodeComments;
      Button buttonEpisodeComments = ViewBindings.findChildViewById(rootView, id);
      if (buttonEpisodeComments == null) {
        break missingId;
      }

      id = R.id.buttonEpisodeImdb;
      Button buttonEpisodeImdb = ViewBindings.findChildViewById(rootView, id);
      if (buttonEpisodeImdb == null) {
        break missingId;
      }

      id = R.id.buttonEpisodeShare;
      Button buttonEpisodeShare = ViewBindings.findChildViewById(rootView, id);
      if (buttonEpisodeShare == null) {
        break missingId;
      }

      id = R.id.buttonEpisodeTmdb;
      Button buttonEpisodeTmdb = ViewBindings.findChildViewById(rootView, id);
      if (buttonEpisodeTmdb == null) {
        break missingId;
      }

      id = R.id.buttonEpisodeTrakt;
      Button buttonEpisodeTrakt = ViewBindings.findChildViewById(rootView, id);
      if (buttonEpisodeTrakt == null) {
        break missingId;
      }

      return new ButtonsEpisodeMoreBinding((LinearLayout) rootView, buttonEpisodeCalendar,
          buttonEpisodeComments, buttonEpisodeImdb, buttonEpisodeShare, buttonEpisodeTmdb,
          buttonEpisodeTrakt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
