// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogNotificationThresholdBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText editTextThresholdValue;

  @NonNull
  public final RadioButton radioButtonThresholdDays;

  @NonNull
  public final RadioButton radioButtonThresholdHours;

  @NonNull
  public final RadioButton radioButtonThresholdMinutes;

  @NonNull
  public final RadioGroup radioGroupThreshold;

  @NonNull
  public final ScrollView scrollViewThreshold;

  private DialogNotificationThresholdBinding(@NonNull ScrollView rootView,
      @NonNull EditText editTextThresholdValue, @NonNull RadioButton radioButtonThresholdDays,
      @NonNull RadioButton radioButtonThresholdHours,
      @NonNull RadioButton radioButtonThresholdMinutes, @NonNull RadioGroup radioGroupThreshold,
      @NonNull ScrollView scrollViewThreshold) {
    this.rootView = rootView;
    this.editTextThresholdValue = editTextThresholdValue;
    this.radioButtonThresholdDays = radioButtonThresholdDays;
    this.radioButtonThresholdHours = radioButtonThresholdHours;
    this.radioButtonThresholdMinutes = radioButtonThresholdMinutes;
    this.radioGroupThreshold = radioGroupThreshold;
    this.scrollViewThreshold = scrollViewThreshold;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogNotificationThresholdBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogNotificationThresholdBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_notification_threshold, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogNotificationThresholdBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextThresholdValue;
      EditText editTextThresholdValue = ViewBindings.findChildViewById(rootView, id);
      if (editTextThresholdValue == null) {
        break missingId;
      }

      id = R.id.radioButtonThresholdDays;
      RadioButton radioButtonThresholdDays = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonThresholdDays == null) {
        break missingId;
      }

      id = R.id.radioButtonThresholdHours;
      RadioButton radioButtonThresholdHours = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonThresholdHours == null) {
        break missingId;
      }

      id = R.id.radioButtonThresholdMinutes;
      RadioButton radioButtonThresholdMinutes = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonThresholdMinutes == null) {
        break missingId;
      }

      id = R.id.radioGroupThreshold;
      RadioGroup radioGroupThreshold = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupThreshold == null) {
        break missingId;
      }

      ScrollView scrollViewThreshold = (ScrollView) rootView;

      return new DialogNotificationThresholdBinding((ScrollView) rootView, editTextThresholdValue,
          radioButtonThresholdDays, radioButtonThresholdHours, radioButtonThresholdMinutes,
          radioGroupThreshold, scrollViewThreshold);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
