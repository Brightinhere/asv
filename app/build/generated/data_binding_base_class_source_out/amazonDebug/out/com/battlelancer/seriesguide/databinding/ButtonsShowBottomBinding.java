// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ButtonsShowBottomBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final Button buttonShowComments;

  @NonNull
  public final Button buttonShowImdb;

  @NonNull
  public final Button buttonShowMetacritic;

  @NonNull
  public final Button buttonShowShare;

  @NonNull
  public final Button buttonShowShortcut;

  @NonNull
  public final Button buttonShowSimilar;

  @NonNull
  public final Button buttonShowTmdb;

  @NonNull
  public final Button buttonShowTrakt;

  @NonNull
  public final Button buttonShowWebSearch;

  private ButtonsShowBottomBinding(@NonNull View rootView, @NonNull Button buttonShowComments,
      @NonNull Button buttonShowImdb, @NonNull Button buttonShowMetacritic,
      @NonNull Button buttonShowShare, @NonNull Button buttonShowShortcut,
      @NonNull Button buttonShowSimilar, @NonNull Button buttonShowTmdb,
      @NonNull Button buttonShowTrakt, @NonNull Button buttonShowWebSearch) {
    this.rootView = rootView;
    this.buttonShowComments = buttonShowComments;
    this.buttonShowImdb = buttonShowImdb;
    this.buttonShowMetacritic = buttonShowMetacritic;
    this.buttonShowShare = buttonShowShare;
    this.buttonShowShortcut = buttonShowShortcut;
    this.buttonShowSimilar = buttonShowSimilar;
    this.buttonShowTmdb = buttonShowTmdb;
    this.buttonShowTrakt = buttonShowTrakt;
    this.buttonShowWebSearch = buttonShowWebSearch;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ButtonsShowBottomBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.buttons_show_bottom, parent);
    return bind(parent);
  }

  @NonNull
  public static ButtonsShowBottomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonShowComments;
      Button buttonShowComments = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowComments == null) {
        break missingId;
      }

      id = R.id.buttonShowImdb;
      Button buttonShowImdb = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowImdb == null) {
        break missingId;
      }

      id = R.id.buttonShowMetacritic;
      Button buttonShowMetacritic = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowMetacritic == null) {
        break missingId;
      }

      id = R.id.buttonShowShare;
      Button buttonShowShare = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowShare == null) {
        break missingId;
      }

      id = R.id.buttonShowShortcut;
      Button buttonShowShortcut = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowShortcut == null) {
        break missingId;
      }

      id = R.id.buttonShowSimilar;
      Button buttonShowSimilar = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowSimilar == null) {
        break missingId;
      }

      id = R.id.buttonShowTmdb;
      Button buttonShowTmdb = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowTmdb == null) {
        break missingId;
      }

      id = R.id.buttonShowTrakt;
      Button buttonShowTrakt = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowTrakt == null) {
        break missingId;
      }

      id = R.id.buttonShowWebSearch;
      Button buttonShowWebSearch = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowWebSearch == null) {
        break missingId;
      }

      return new ButtonsShowBottomBinding(rootView, buttonShowComments, buttonShowImdb,
          buttonShowMetacritic, buttonShowShare, buttonShowShortcut, buttonShowSimilar,
          buttonShowTmdb, buttonShowTrakt, buttonShowWebSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
