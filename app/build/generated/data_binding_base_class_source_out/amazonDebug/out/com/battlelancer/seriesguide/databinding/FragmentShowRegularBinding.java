// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentShowRegularBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Barrier barrierPosterButtonsBottom;

  @NonNull
  public final Button buttonShowFavorite;

  @NonNull
  public final Button buttonShowHidden;

  @NonNull
  public final Button buttonShowNotify;

  @NonNull
  public final RatingsShowsBinding containerRatings;

  @NonNull
  public final MaterialCardView containerShowPoster;

  @NonNull
  public final ImageView imageViewShowPoster;

  @NonNull
  public final View imageViewShowPosterBackground;

  @NonNull
  public final ScrollView scrollViewShow;

  @NonNull
  public final TextView textViewShowReleaseTime;

  @NonNull
  public final TextView textViewShowStatus;

  private FragmentShowRegularBinding(@NonNull ScrollView rootView,
      @NonNull Barrier barrierPosterButtonsBottom, @NonNull Button buttonShowFavorite,
      @NonNull Button buttonShowHidden, @NonNull Button buttonShowNotify,
      @NonNull RatingsShowsBinding containerRatings, @NonNull MaterialCardView containerShowPoster,
      @NonNull ImageView imageViewShowPoster, @NonNull View imageViewShowPosterBackground,
      @NonNull ScrollView scrollViewShow, @NonNull TextView textViewShowReleaseTime,
      @NonNull TextView textViewShowStatus) {
    this.rootView = rootView;
    this.barrierPosterButtonsBottom = barrierPosterButtonsBottom;
    this.buttonShowFavorite = buttonShowFavorite;
    this.buttonShowHidden = buttonShowHidden;
    this.buttonShowNotify = buttonShowNotify;
    this.containerRatings = containerRatings;
    this.containerShowPoster = containerShowPoster;
    this.imageViewShowPoster = imageViewShowPoster;
    this.imageViewShowPosterBackground = imageViewShowPosterBackground;
    this.scrollViewShow = scrollViewShow;
    this.textViewShowReleaseTime = textViewShowReleaseTime;
    this.textViewShowStatus = textViewShowStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentShowRegularBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentShowRegularBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_show_regular, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentShowRegularBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrierPosterButtonsBottom;
      Barrier barrierPosterButtonsBottom = ViewBindings.findChildViewById(rootView, id);
      if (barrierPosterButtonsBottom == null) {
        break missingId;
      }

      id = R.id.buttonShowFavorite;
      Button buttonShowFavorite = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowFavorite == null) {
        break missingId;
      }

      id = R.id.buttonShowHidden;
      Button buttonShowHidden = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowHidden == null) {
        break missingId;
      }

      id = R.id.buttonShowNotify;
      Button buttonShowNotify = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowNotify == null) {
        break missingId;
      }

      id = R.id.containerRatings;
      View containerRatings = ViewBindings.findChildViewById(rootView, id);
      if (containerRatings == null) {
        break missingId;
      }
      RatingsShowsBinding binding_containerRatings = RatingsShowsBinding.bind(containerRatings);

      id = R.id.containerShowPoster;
      MaterialCardView containerShowPoster = ViewBindings.findChildViewById(rootView, id);
      if (containerShowPoster == null) {
        break missingId;
      }

      id = R.id.imageViewShowPoster;
      ImageView imageViewShowPoster = ViewBindings.findChildViewById(rootView, id);
      if (imageViewShowPoster == null) {
        break missingId;
      }

      id = R.id.imageViewShowPosterBackground;
      View imageViewShowPosterBackground = ViewBindings.findChildViewById(rootView, id);
      if (imageViewShowPosterBackground == null) {
        break missingId;
      }

      ScrollView scrollViewShow = (ScrollView) rootView;

      id = R.id.textViewShowReleaseTime;
      TextView textViewShowReleaseTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewShowReleaseTime == null) {
        break missingId;
      }

      id = R.id.textViewShowStatus;
      TextView textViewShowStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewShowStatus == null) {
        break missingId;
      }

      return new FragmentShowRegularBinding((ScrollView) rootView, barrierPosterButtonsBottom,
          buttonShowFavorite, buttonShowHidden, buttonShowNotify, binding_containerRatings,
          containerShowPoster, imageViewShowPoster, imageViewShowPosterBackground, scrollViewShow,
          textViewShowReleaseTime, textViewShowStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
