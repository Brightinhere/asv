// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAutoBackupBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button buttonAutoBackupImport;

  @NonNull
  public final Button buttonAutoBackupListsExportFile;

  @NonNull
  public final Button buttonAutoBackupMoviesExportFile;

  @NonNull
  public final Button buttonAutoBackupNow;

  @NonNull
  public final Button buttonAutoBackupShowsExportFile;

  @NonNull
  public final CheckBox checkBoxAutoBackupCreateCopy;

  @NonNull
  public final ConstraintLayout containerAutoBackupImport;

  @NonNull
  public final ConstraintLayout containerAutoBackupSettings;

  @NonNull
  public final Group groupState;

  @NonNull
  public final Group groupUserFiles;

  @NonNull
  public final ImageView imageViewBackupStatus;

  @NonNull
  public final ProgressBar progressBarAutoBackup;

  @NonNull
  public final SwitchCompat switchAutoBackup;

  @NonNull
  public final TextView textViewAutoBackupImportWarning;

  @NonNull
  public final TextView textViewAutoBackupLabelImport;

  @NonNull
  public final TextView textViewAutoBackupLastTime;

  @NonNull
  public final TextView textViewAutoBackupLists;

  @NonNull
  public final TextView textViewAutoBackupListsExportFile;

  @NonNull
  public final TextView textViewAutoBackupMovies;

  @NonNull
  public final TextView textViewAutoBackupMoviesExportFile;

  @NonNull
  public final TextView textViewAutoBackupShows;

  @NonNull
  public final TextView textViewAutoBackupShowsExportFile;

  @NonNull
  public final TextView textViewBackupStatus;

  @NonNull
  public final TextView textViewDetails;

  private FragmentAutoBackupBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button buttonAutoBackupImport, @NonNull Button buttonAutoBackupListsExportFile,
      @NonNull Button buttonAutoBackupMoviesExportFile, @NonNull Button buttonAutoBackupNow,
      @NonNull Button buttonAutoBackupShowsExportFile,
      @NonNull CheckBox checkBoxAutoBackupCreateCopy,
      @NonNull ConstraintLayout containerAutoBackupImport,
      @NonNull ConstraintLayout containerAutoBackupSettings, @NonNull Group groupState,
      @NonNull Group groupUserFiles, @NonNull ImageView imageViewBackupStatus,
      @NonNull ProgressBar progressBarAutoBackup, @NonNull SwitchCompat switchAutoBackup,
      @NonNull TextView textViewAutoBackupImportWarning,
      @NonNull TextView textViewAutoBackupLabelImport, @NonNull TextView textViewAutoBackupLastTime,
      @NonNull TextView textViewAutoBackupLists,
      @NonNull TextView textViewAutoBackupListsExportFile,
      @NonNull TextView textViewAutoBackupMovies,
      @NonNull TextView textViewAutoBackupMoviesExportFile,
      @NonNull TextView textViewAutoBackupShows,
      @NonNull TextView textViewAutoBackupShowsExportFile, @NonNull TextView textViewBackupStatus,
      @NonNull TextView textViewDetails) {
    this.rootView = rootView;
    this.buttonAutoBackupImport = buttonAutoBackupImport;
    this.buttonAutoBackupListsExportFile = buttonAutoBackupListsExportFile;
    this.buttonAutoBackupMoviesExportFile = buttonAutoBackupMoviesExportFile;
    this.buttonAutoBackupNow = buttonAutoBackupNow;
    this.buttonAutoBackupShowsExportFile = buttonAutoBackupShowsExportFile;
    this.checkBoxAutoBackupCreateCopy = checkBoxAutoBackupCreateCopy;
    this.containerAutoBackupImport = containerAutoBackupImport;
    this.containerAutoBackupSettings = containerAutoBackupSettings;
    this.groupState = groupState;
    this.groupUserFiles = groupUserFiles;
    this.imageViewBackupStatus = imageViewBackupStatus;
    this.progressBarAutoBackup = progressBarAutoBackup;
    this.switchAutoBackup = switchAutoBackup;
    this.textViewAutoBackupImportWarning = textViewAutoBackupImportWarning;
    this.textViewAutoBackupLabelImport = textViewAutoBackupLabelImport;
    this.textViewAutoBackupLastTime = textViewAutoBackupLastTime;
    this.textViewAutoBackupLists = textViewAutoBackupLists;
    this.textViewAutoBackupListsExportFile = textViewAutoBackupListsExportFile;
    this.textViewAutoBackupMovies = textViewAutoBackupMovies;
    this.textViewAutoBackupMoviesExportFile = textViewAutoBackupMoviesExportFile;
    this.textViewAutoBackupShows = textViewAutoBackupShows;
    this.textViewAutoBackupShowsExportFile = textViewAutoBackupShowsExportFile;
    this.textViewBackupStatus = textViewBackupStatus;
    this.textViewDetails = textViewDetails;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAutoBackupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAutoBackupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_auto_backup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAutoBackupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAutoBackupImport;
      Button buttonAutoBackupImport = ViewBindings.findChildViewById(rootView, id);
      if (buttonAutoBackupImport == null) {
        break missingId;
      }

      id = R.id.buttonAutoBackupListsExportFile;
      Button buttonAutoBackupListsExportFile = ViewBindings.findChildViewById(rootView, id);
      if (buttonAutoBackupListsExportFile == null) {
        break missingId;
      }

      id = R.id.buttonAutoBackupMoviesExportFile;
      Button buttonAutoBackupMoviesExportFile = ViewBindings.findChildViewById(rootView, id);
      if (buttonAutoBackupMoviesExportFile == null) {
        break missingId;
      }

      id = R.id.buttonAutoBackupNow;
      Button buttonAutoBackupNow = ViewBindings.findChildViewById(rootView, id);
      if (buttonAutoBackupNow == null) {
        break missingId;
      }

      id = R.id.buttonAutoBackupShowsExportFile;
      Button buttonAutoBackupShowsExportFile = ViewBindings.findChildViewById(rootView, id);
      if (buttonAutoBackupShowsExportFile == null) {
        break missingId;
      }

      id = R.id.checkBoxAutoBackupCreateCopy;
      CheckBox checkBoxAutoBackupCreateCopy = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxAutoBackupCreateCopy == null) {
        break missingId;
      }

      id = R.id.containerAutoBackupImport;
      ConstraintLayout containerAutoBackupImport = ViewBindings.findChildViewById(rootView, id);
      if (containerAutoBackupImport == null) {
        break missingId;
      }

      id = R.id.containerAutoBackupSettings;
      ConstraintLayout containerAutoBackupSettings = ViewBindings.findChildViewById(rootView, id);
      if (containerAutoBackupSettings == null) {
        break missingId;
      }

      id = R.id.groupState;
      Group groupState = ViewBindings.findChildViewById(rootView, id);
      if (groupState == null) {
        break missingId;
      }

      id = R.id.groupUserFiles;
      Group groupUserFiles = ViewBindings.findChildViewById(rootView, id);
      if (groupUserFiles == null) {
        break missingId;
      }

      id = R.id.imageViewBackupStatus;
      ImageView imageViewBackupStatus = ViewBindings.findChildViewById(rootView, id);
      if (imageViewBackupStatus == null) {
        break missingId;
      }

      id = R.id.progressBarAutoBackup;
      ProgressBar progressBarAutoBackup = ViewBindings.findChildViewById(rootView, id);
      if (progressBarAutoBackup == null) {
        break missingId;
      }

      id = R.id.switchAutoBackup;
      SwitchCompat switchAutoBackup = ViewBindings.findChildViewById(rootView, id);
      if (switchAutoBackup == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupImportWarning;
      TextView textViewAutoBackupImportWarning = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupImportWarning == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupLabelImport;
      TextView textViewAutoBackupLabelImport = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupLabelImport == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupLastTime;
      TextView textViewAutoBackupLastTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupLastTime == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupLists;
      TextView textViewAutoBackupLists = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupLists == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupListsExportFile;
      TextView textViewAutoBackupListsExportFile = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupListsExportFile == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupMovies;
      TextView textViewAutoBackupMovies = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupMovies == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupMoviesExportFile;
      TextView textViewAutoBackupMoviesExportFile = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupMoviesExportFile == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupShows;
      TextView textViewAutoBackupShows = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupShows == null) {
        break missingId;
      }

      id = R.id.textViewAutoBackupShowsExportFile;
      TextView textViewAutoBackupShowsExportFile = ViewBindings.findChildViewById(rootView, id);
      if (textViewAutoBackupShowsExportFile == null) {
        break missingId;
      }

      id = R.id.textViewBackupStatus;
      TextView textViewBackupStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewBackupStatus == null) {
        break missingId;
      }

      id = R.id.textViewDetails;
      TextView textViewDetails = ViewBindings.findChildViewById(rootView, id);
      if (textViewDetails == null) {
        break missingId;
      }

      return new FragmentAutoBackupBinding((CoordinatorLayout) rootView, buttonAutoBackupImport,
          buttonAutoBackupListsExportFile, buttonAutoBackupMoviesExportFile, buttonAutoBackupNow,
          buttonAutoBackupShowsExportFile, checkBoxAutoBackupCreateCopy, containerAutoBackupImport,
          containerAutoBackupSettings, groupState, groupUserFiles, imageViewBackupStatus,
          progressBarAutoBackup, switchAutoBackup, textViewAutoBackupImportWarning,
          textViewAutoBackupLabelImport, textViewAutoBackupLastTime, textViewAutoBackupLists,
          textViewAutoBackupListsExportFile, textViewAutoBackupMovies,
          textViewAutoBackupMoviesExportFile, textViewAutoBackupShows,
          textViewAutoBackupShowsExportFile, textViewBackupStatus, textViewDetails);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
