// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSearchResultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardViewSearch;

  @NonNull
  public final ImageView imageViewSearchPoster;

  @NonNull
  public final ImageView imageViewSearchWatched;

  @NonNull
  public final TextView textViewSearchEpisode;

  @NonNull
  public final TextView textViewSearchShow;

  @NonNull
  public final TextView textViewSearchSnippet;

  private ItemSearchResultBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardViewSearch, @NonNull ImageView imageViewSearchPoster,
      @NonNull ImageView imageViewSearchWatched, @NonNull TextView textViewSearchEpisode,
      @NonNull TextView textViewSearchShow, @NonNull TextView textViewSearchSnippet) {
    this.rootView = rootView;
    this.cardViewSearch = cardViewSearch;
    this.imageViewSearchPoster = imageViewSearchPoster;
    this.imageViewSearchWatched = imageViewSearchWatched;
    this.textViewSearchEpisode = textViewSearchEpisode;
    this.textViewSearchShow = textViewSearchShow;
    this.textViewSearchSnippet = textViewSearchSnippet;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSearchResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSearchResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_search_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSearchResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardViewSearch;
      MaterialCardView cardViewSearch = ViewBindings.findChildViewById(rootView, id);
      if (cardViewSearch == null) {
        break missingId;
      }

      id = R.id.imageViewSearchPoster;
      ImageView imageViewSearchPoster = ViewBindings.findChildViewById(rootView, id);
      if (imageViewSearchPoster == null) {
        break missingId;
      }

      id = R.id.imageViewSearchWatched;
      ImageView imageViewSearchWatched = ViewBindings.findChildViewById(rootView, id);
      if (imageViewSearchWatched == null) {
        break missingId;
      }

      id = R.id.textViewSearchEpisode;
      TextView textViewSearchEpisode = ViewBindings.findChildViewById(rootView, id);
      if (textViewSearchEpisode == null) {
        break missingId;
      }

      id = R.id.textViewSearchShow;
      TextView textViewSearchShow = ViewBindings.findChildViewById(rootView, id);
      if (textViewSearchShow == null) {
        break missingId;
      }

      id = R.id.textViewSearchSnippet;
      TextView textViewSearchSnippet = ViewBindings.findChildViewById(rootView, id);
      if (textViewSearchSnippet == null) {
        break missingId;
      }

      return new ItemSearchResultBinding((ConstraintLayout) rootView, cardViewSearch,
          imageViewSearchPoster, imageViewSearchWatched, textViewSearchEpisode, textViewSearchShow,
          textViewSearchSnippet);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
