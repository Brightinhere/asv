// Generated by view binder compiler. Do not edit!
package com.battlelancer.seriesguide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.battlelancer.seriesguide.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RatingsShowsNarrowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageViewRatingsIcon;

  @NonNull
  public final TextView textViewRatingsRange;

  @NonNull
  public final TextView textViewRatingsUser;

  @NonNull
  public final TextView textViewRatingsUserLabel;

  @NonNull
  public final TextView textViewRatingsValue;

  @NonNull
  public final TextView textViewRatingsVotes;

  private RatingsShowsNarrowBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageViewRatingsIcon, @NonNull TextView textViewRatingsRange,
      @NonNull TextView textViewRatingsUser, @NonNull TextView textViewRatingsUserLabel,
      @NonNull TextView textViewRatingsValue, @NonNull TextView textViewRatingsVotes) {
    this.rootView = rootView;
    this.imageViewRatingsIcon = imageViewRatingsIcon;
    this.textViewRatingsRange = textViewRatingsRange;
    this.textViewRatingsUser = textViewRatingsUser;
    this.textViewRatingsUserLabel = textViewRatingsUserLabel;
    this.textViewRatingsValue = textViewRatingsValue;
    this.textViewRatingsVotes = textViewRatingsVotes;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RatingsShowsNarrowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RatingsShowsNarrowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ratings_shows_narrow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RatingsShowsNarrowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewRatingsIcon;
      ImageView imageViewRatingsIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewRatingsIcon == null) {
        break missingId;
      }

      id = R.id.textViewRatingsRange;
      TextView textViewRatingsRange = ViewBindings.findChildViewById(rootView, id);
      if (textViewRatingsRange == null) {
        break missingId;
      }

      id = R.id.textViewRatingsUser;
      TextView textViewRatingsUser = ViewBindings.findChildViewById(rootView, id);
      if (textViewRatingsUser == null) {
        break missingId;
      }

      id = R.id.textViewRatingsUserLabel;
      TextView textViewRatingsUserLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewRatingsUserLabel == null) {
        break missingId;
      }

      id = R.id.textViewRatingsValue;
      TextView textViewRatingsValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewRatingsValue == null) {
        break missingId;
      }

      id = R.id.textViewRatingsVotes;
      TextView textViewRatingsVotes = ViewBindings.findChildViewById(rootView, id);
      if (textViewRatingsVotes == null) {
        break missingId;
      }

      return new RatingsShowsNarrowBinding((ConstraintLayout) rootView, imageViewRatingsIcon,
          textViewRatingsRange, textViewRatingsUser, textViewRatingsUserLabel, textViewRatingsValue,
          textViewRatingsVotes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
